def maxgapf(arr):
    mg = -1
    for i in range(len(arr)-1):
        if mg < arr[i+1][0]-1-arr[i][1]:
            mg = arr[i+1][0]-1-arr[i][1]
    return mg

def theInFits(arr,insize):
    maxg = maxgapf(arr)
    if maxg >= insize:
        return 1
    else:
        return 0

def itsGood(arr):
    for i in range(len(arr)-1):
        if arr[i][1] >= arr[i+1][0]:
            return 0
    return 1
    
def MI(C, arr, K, persuaded=0):
    # Write your code here
    arr.sort()
    bad = 0
    for i in range(len(arr)-1):
        if arr[i][1] >= arr[i+1][0]:
            bad = 1
    maxgap = maxgapf(arr)
    if K == 0:
        if bad==1:
            print('Bad')
            #return 0
        else:
            print('Good')
            #return 1
    
    if K == 1:
        if bad == 0:
            print('Good')
            #return 1
        else:
            for i in range(len(arr)-1):
                if arr[i][1] < arr[i+1][0]:
                    continue
                else:
                    for j in [i+1,i]:
                        s1 = arr[j][1]+1-arr[j][0]
                        arr1 = arr.copy()
                        arr1.pop(j)
                        if theInFits(arr1,s1):
                            if itsGood(arr1):
                                print('Good')
                                return
                    print('Bad')
                    return
if _name_ == '_main_':
    n = list(map(int, input().rstrip().split()))

    arr = []
    for i in range(n[1]):
        arr.append(list(map(int, input().rstrip().split())))

    MI(n[1], arr, n[2])
